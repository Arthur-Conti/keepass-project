// Code generated by MockGen. DO NOT EDIT.
// Source: internal/ports/repositories/vaults.go
//
// Generated by this command:
//
//	mockgen -source=internal/ports/repositories/vaults.go -destination=internal/repositories/tests/mocks/vaults_repository_mock.go -package=repository_mocks
//

// Package repository_mocks is a generated GoMock package.
package repository_mocks

import (
	reflect "reflect"

	models "github.com/Arthur-Conti/keepass-project/internal/models"
	gomock "go.uber.org/mock/gomock"
)

// MockVaultsRepositoryInterface is a mock of VaultsRepositoryInterface interface.
type MockVaultsRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockVaultsRepositoryInterfaceMockRecorder
}

// MockVaultsRepositoryInterfaceMockRecorder is the mock recorder for MockVaultsRepositoryInterface.
type MockVaultsRepositoryInterfaceMockRecorder struct {
	mock *MockVaultsRepositoryInterface
}

// NewMockVaultsRepositoryInterface creates a new mock instance.
func NewMockVaultsRepositoryInterface(ctrl *gomock.Controller) *MockVaultsRepositoryInterface {
	mock := &MockVaultsRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockVaultsRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVaultsRepositoryInterface) EXPECT() *MockVaultsRepositoryInterfaceMockRecorder {
	return m.recorder
}

// CreateVault mocks base method.
func (m *MockVaultsRepositoryInterface) CreateVault(arg0 models.CreateVault) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVault", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateVault indicates an expected call of CreateVault.
func (mr *MockVaultsRepositoryInterfaceMockRecorder) CreateVault(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVault", reflect.TypeOf((*MockVaultsRepositoryInterface)(nil).CreateVault), arg0)
}

// GetVaultByID mocks base method.
func (m *MockVaultsRepositoryInterface) GetVaultByID(arg0 string) (models.Vault, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVaultByID", arg0)
	ret0, _ := ret[0].(models.Vault)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVaultByID indicates an expected call of GetVaultByID.
func (mr *MockVaultsRepositoryInterfaceMockRecorder) GetVaultByID(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVaultByID", reflect.TypeOf((*MockVaultsRepositoryInterface)(nil).GetVaultByID), arg0)
}

// ListAllVaultsByUserID mocks base method.
func (m *MockVaultsRepositoryInterface) ListAllVaultsByUserID(arg0 string) ([]models.Vault, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAllVaultsByUserID", arg0)
	ret0, _ := ret[0].([]models.Vault)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAllVaultsByUserID indicates an expected call of ListAllVaultsByUserID.
func (mr *MockVaultsRepositoryInterfaceMockRecorder) ListAllVaultsByUserID(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAllVaultsByUserID", reflect.TypeOf((*MockVaultsRepositoryInterface)(nil).ListAllVaultsByUserID), arg0)
}
